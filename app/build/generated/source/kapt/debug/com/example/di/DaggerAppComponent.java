// Generated by Dagger (https://dagger.dev).
package com.example.di;

import android.app.Application;
import com.example.core.di.CoreComponent;
import com.example.thereviewshow.application.TheReviewShowApplication;
import com.example.thereviewshow.homescreen.ui.HomeScreenActivity;
import dagger.android.AndroidInjector;
import dagger.android.DaggerApplication_MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.DispatchingAndroidInjector_Factory;
import dagger.android.support.DaggerAppCompatActivity_MembersInjector;
import dagger.internal.Preconditions;
import java.util.Collections;
import java.util.Map;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerAppComponent implements AppComponent {
  private Provider<ActivityBindingModule_HomeScreenActivity.HomeScreenActivitySubcomponent.Factory> homeScreenActivitySubcomponentFactoryProvider;

  private DaggerAppComponent(CoreComponent coreComponent, Application application) {

    initialize(coreComponent, application);
  }

  public static AppComponent.Builder builder() {
    return new Builder();
  }

  private Map<Class<?>, Provider<AndroidInjector.Factory<?>>> getMapOfClassOfAndProviderOfAndroidInjectorFactoryOf(
      ) {
    return Collections.<Class<?>, Provider<AndroidInjector.Factory<?>>>singletonMap(HomeScreenActivity.class, (Provider) homeScreenActivitySubcomponentFactoryProvider);}

  private DispatchingAndroidInjector<Object> getDispatchingAndroidInjectorOfObject() {
    return DispatchingAndroidInjector_Factory.newInstance(getMapOfClassOfAndProviderOfAndroidInjectorFactoryOf(), Collections.<String, Provider<AndroidInjector.Factory<?>>>emptyMap());}

  @SuppressWarnings("unchecked")
  private void initialize(final CoreComponent coreComponent, final Application application) {
    this.homeScreenActivitySubcomponentFactoryProvider = new Provider<ActivityBindingModule_HomeScreenActivity.HomeScreenActivitySubcomponent.Factory>() {
      @Override
      public ActivityBindingModule_HomeScreenActivity.HomeScreenActivitySubcomponent.Factory get() {
        return new HomeScreenActivitySubcomponentFactory();}
    };
  }

  @Override
  public void inject(TheReviewShowApplication arg0) {
    injectTheReviewShowApplication(arg0);}

  private TheReviewShowApplication injectTheReviewShowApplication(
      TheReviewShowApplication instance) {
    DaggerApplication_MembersInjector.injectAndroidInjector(instance, getDispatchingAndroidInjectorOfObject());
    return instance;
  }

  private static final class Builder implements AppComponent.Builder {
    private Application application;

    private CoreComponent coreComponent;

    @Override
    public Builder application(Application application) {
      this.application = Preconditions.checkNotNull(application);
      return this;
    }

    @Override
    public Builder coreComponent(CoreComponent coreComponent) {
      this.coreComponent = Preconditions.checkNotNull(coreComponent);
      return this;
    }

    @Override
    public AppComponent build() {
      Preconditions.checkBuilderRequirement(application, Application.class);
      Preconditions.checkBuilderRequirement(coreComponent, CoreComponent.class);
      return new DaggerAppComponent(coreComponent, application);
    }
  }

  private final class HomeScreenActivitySubcomponentFactory implements ActivityBindingModule_HomeScreenActivity.HomeScreenActivitySubcomponent.Factory {
    @Override
    public ActivityBindingModule_HomeScreenActivity.HomeScreenActivitySubcomponent create(
        HomeScreenActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new HomeScreenActivitySubcomponentImpl(arg0);
    }
  }

  private final class HomeScreenActivitySubcomponentImpl implements ActivityBindingModule_HomeScreenActivity.HomeScreenActivitySubcomponent {
    private HomeScreenActivitySubcomponentImpl(HomeScreenActivity arg0) {

    }

    @Override
    public void inject(HomeScreenActivity arg0) {
      injectHomeScreenActivity(arg0);}

    private HomeScreenActivity injectHomeScreenActivity(HomeScreenActivity instance) {
      DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, DaggerAppComponent.this.getDispatchingAndroidInjectorOfObject());
      return instance;
    }
  }
}
