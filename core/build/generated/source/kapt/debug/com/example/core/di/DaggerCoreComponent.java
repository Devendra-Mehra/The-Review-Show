// Generated by Dagger (https://dagger.dev).
package com.example.core.di;

import dagger.internal.Preconditions;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerCoreComponent implements CoreComponent {
  private DaggerCoreComponent() {

  }

  public static Builder builder() {
    return new Builder();
  }

  public static CoreComponent create() {
    return new Builder().build();
  }

  public static final class Builder {
    private Builder() {
    }

    /**
     * @deprecated This module is declared, but an instance is not used in the component. This method is a no-op. For more, see https://dagger.dev/unused-modules.
     */
    @Deprecated
    public Builder coreModule(CoreModule coreModule) {
      Preconditions.checkNotNull(coreModule);
      return this;
    }

    /**
     * @deprecated This module is declared, but an instance is not used in the component. This method is a no-op. For more, see https://dagger.dev/unused-modules.
     */
    @Deprecated
    public Builder networkModule(NetworkModule networkModule) {
      Preconditions.checkNotNull(networkModule);
      return this;
    }

    /**
     * @deprecated This module is declared, but an instance is not used in the component. This method is a no-op. For more, see https://dagger.dev/unused-modules.
     */
    @Deprecated
    public Builder gsonModule(GsonModule gsonModule) {
      Preconditions.checkNotNull(gsonModule);
      return this;
    }

    /**
     * @deprecated This module is declared, but an instance is not used in the component. This method is a no-op. For more, see https://dagger.dev/unused-modules.
     */
    @Deprecated
    public Builder imageModule(ImageModule imageModule) {
      Preconditions.checkNotNull(imageModule);
      return this;
    }

    /**
     * @deprecated This module is declared, but an instance is not used in the component. This method is a no-op. For more, see https://dagger.dev/unused-modules.
     */
    @Deprecated
    public Builder storageModule(StorageModule storageModule) {
      Preconditions.checkNotNull(storageModule);
      return this;
    }

    public CoreComponent build() {
      return new DaggerCoreComponent();
    }
  }
}
