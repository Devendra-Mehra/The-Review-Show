// Generated by Dagger (https://dagger.dev).
package com.example.core.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvidesRxJavaCallAdapterFactoryFactory implements Factory<RxJava2CallAdapterFactory> {
  private final NetworkModule module;

  public NetworkModule_ProvidesRxJavaCallAdapterFactoryFactory(NetworkModule module) {
    this.module = module;
  }

  @Override
  public RxJava2CallAdapterFactory get() {
    return providesRxJavaCallAdapterFactory(module);
  }

  public static NetworkModule_ProvidesRxJavaCallAdapterFactoryFactory create(NetworkModule module) {
    return new NetworkModule_ProvidesRxJavaCallAdapterFactoryFactory(module);
  }

  public static RxJava2CallAdapterFactory providesRxJavaCallAdapterFactory(NetworkModule instance) {
    return Preconditions.checkNotNull(instance.providesRxJavaCallAdapterFactory(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
