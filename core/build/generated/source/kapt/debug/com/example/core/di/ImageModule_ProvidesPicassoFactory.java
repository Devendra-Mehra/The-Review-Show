// Generated by Dagger (https://dagger.dev).
package com.example.core.di;

import android.content.Context;
import com.squareup.picasso.Picasso;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ImageModule_ProvidesPicassoFactory implements Factory<Picasso> {
  private final ImageModule module;

  private final Provider<Context> contextProvider;

  public ImageModule_ProvidesPicassoFactory(ImageModule module, Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public Picasso get() {
    return providesPicasso(module, contextProvider.get());
  }

  public static ImageModule_ProvidesPicassoFactory create(ImageModule module,
      Provider<Context> contextProvider) {
    return new ImageModule_ProvidesPicassoFactory(module, contextProvider);
  }

  public static Picasso providesPicasso(ImageModule instance, Context context) {
    return Preconditions.checkNotNull(instance.providesPicasso(context), "Cannot return null from a non-@Nullable @Provides method");
  }
}
